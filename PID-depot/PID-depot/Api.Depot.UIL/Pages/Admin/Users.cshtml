@page
@model Api.Depot.UIL.Pages.Admin.UsersModel
@{
}

<div class="container">
	<div class="row">
		<table class="table">
			<thead>
				<tr>
					<th scope="col">Matricule</th>
					<th scope="col">Nom</th>
					<th scope="col">Prénom</th>
					<th scope="col">Email</th>
					<th scope="col">Date de naissance</th>
					<th scope="col">Est actif</th>
					<th scope="col">#</th>
				</tr>
			</thead>
			<tbody>

				@{
					foreach (var user in Model.Users)
					{
						<tr>
							<th scope="row">@user.RegistrationNumber</th>
							<td>@user.Lastname</td>
							<td>@user.Firstname</td>
							<td>@user.Email</td>
							<td>@user.Birthdate.ToString("dd-MM-yyyy")</td>
							<td>@user.IsActivated</td>
							<td>
								<button type="button" class="btn btn-outline-primary" onclick="onModalOpened('@user.Id');" data-bs-toggle="modal" data-bs-target="#userModificationModal">
									Modifier
								</button>
							</td>
						</tr>
					}
				}

			</tbody>
		</table>
	</div>

	<div class="row">
		<nav aria-label="Navigation des utilisateurs">
			<ul class="pagination justify-content-center">

				@if (Model.HasPrevious == true)
				{
					<li class="page-item">
						<a class="page-link" asp-page="/Admin/Users" asp-route-p="@(Model.ActualPage - 1)">Précédent</a>
					</li>
					<li class="page-item">
						<a class="page-link" asp-page="/Admin/Users" asp-route-p="@(Model.ActualPage - 1)">@(Model.ActualPage - 1)</a>
					</li>
				}
				else
				{
					<li class="page-item disabled">
						<span class="page-link">Précédent</span>
					</li>
				}

				<li class="page-item active" aria-current="page">
					<span class="page-link">@Model.ActualPage</span>
				</li>

				@if (Model.HasNext == true)
				{
					<li class="page-item">
						<a class="page-link" asp-page="/Admin/Users" asp-route-p="@(Model.ActualPage + 1)">@(Model.ActualPage + 1)</a>
					</li>
					<li class="page-item">
						<a class="page-link" asp-page="/Admin/Users" asp-route-p="@(Model.ActualPage + 1)">Next</a>
					</li>
				}
				else
				{
					<li class="page-item disabled">
						<span class="page-link">Suivant</span>
					</li>
				}
			</ul>
		</nav>
	</div>

</div>

<div class="modal fade" id="userModificationModal" tabindex="-1" aria-labelledby="Modification de l'utilisateur'" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="modalUserName"></h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer" onclick="onModalClosed"></button>
			</div>
			<div class="modal-body">
				<span hidden id="modalUserId"></span>
				<div class="row" id="modalUserRoles">
				</div>
				<form>
					<div class="mb-3">
						<label for="modalUserAvailableRoles" class="col-form-label">Ajouter un rôle</label>
						<select name="modalAvailableRoles" id="modalAvailableRoles">
						</select>
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" id="modalCloseButton" onclick="onModalClosed()" data-bs-dismiss="modal">Fermer</button>
				<button type="button" class="btn btn-primary" onclick="onModalSaved()">Ajouter un rôle</button>
			</div>
		</div>
	</div>
</div>

<script>

	function onModalClosed() {
		$('#modalUserName').text("");
		$('#modalUserRoles').empty();
		$('#modalAvailableRoles').empty();
	}

	function onModalSaved() {

		let userId = $('#modalUserId').text();
		let userRoleId = $('#modalAvailableRoles').val();

		$.ajax({
			url: '/api/user/' + userId + '/' + userRoleId,
			type: 'POST',
			data: JSON.stringify,
			contentType: 'application/json',
			success: function(response) {
			
				$.notify("Le rôle a bien été ajouté à l'utilisateur", "success");
			},
			error: function(xhr) {
				$.notify("Une erreur est survenue: " + xhr.responseText, "error");
			}

		});

		$('#modalCloseButton').click();
	}

	function onModalOpened(userId) {

		$.ajax({
			url: "/api/user/" + userId,
			type : 'GET',
			dataType: 'JSON',
			success: function(response){

				setModalUserInfos(response);

				$.ajax({
					url: "/api/role",
					type: 'GET',
					dataType: 'JSON',
					success: function(roleResponse){

						

						for(let i = 0; i < roleResponse.length; i++) {

							let result = response.roles.some(function(item) {
								return item.name.includes(roleResponse[i].name);
							});

							if(!result){
								$('#modalAvailableRoles').append("<option value='" + roleResponse[i].id + "'>" + roleResponse[i].name + "</option>");
							}
						}		
					}
				})

			},
			error: function(xhr) {
				$.notify(xhr.responseText, "error");
			}
		})
	}

	function setModalUserInfos(user) {

		$('#modalUserName').text(user.lastname + " " + user.firstname);
		$('#modalUserId').text(user.id);

		for(let i = 0; i < user.roles.length; i++) {

			$('#modalUserRoles').append("<span>" + user.roles[i].name + "</span>")
		}
	}

</script>


