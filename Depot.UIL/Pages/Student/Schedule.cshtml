@page
@using System.Security.Claims
@model Depot.UIL.Pages.Student.ScheduleModel
@{
}

<h1 class="text-center">Horaire</h1>

<div class="row" id="calendar"></div>

<div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title" id="eventModalTitle"></h4>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div class="row">
					<span class="fw-bold fs-5" id="eventModalStartsAtDate">A partir du</span>
				</div>
				<div class="row">
					<div class="inline-block">De <span id="eventModalStartsAtTime"></span> à <span id="eventModalEndsAtTime"></span></div>
				</div>
			</div>
			<div class="modal-footer">
				<a id="eventModalScheduleDetails" class="btn btn-primary">Détails</a>
			</div>
		</div>
	</div>
</div>


<script>

	let calendar;
	let calendarEvents;

	document.addEventListener('DOMContentLoaded', function() {

		var calendarEl = document.getElementById('calendar');
		calendar = new FullCalendar.Calendar(calendarEl, {
			initialView: 'dayGridMonth',
			locale: 'fr',
			height: 800,
			selectable: true,
			events: function(info, successCallback, failureCallback) {

				let lessons = [];
				let events = [];

				$.ajax({
					url: "/api/lesson/user/" + '@(User?.FindFirst(ClaimTypes.NameIdentifier).Value)',
					method: 'GET',
					dataType: 'JSON',
					success: function(response) {

						lessons = response;

					},
					error: function(xhr) {
						$.notify(xhr.responseText, "error");
					},
					async: false
				});

				for(const lesson of lessons) {
					let timetables = [];


					$.ajax({
						url: '/api/lesson/' + lesson.id + '/timetables',
						method: 'GET',
						dataType: 'JSON',
						success: function(response) {

							timetables = response;
						},
						error : function(xhr) {
							$.notify(xhr.responseText, "error");
						},
						async: false
					});


					for(const timetable of timetables) {
						events.push({
							id: timetable.id,
							title: lesson.name,
							start: timetable.startsAt,
							end: timetable.endsAt,
							allDay: false
						});
					}
				}

				successCallback(events);
			},
			eventDisplay: 'block',
			eventClick: function(info) {
				onShowEventModal(info.event);
			}
		});
		calendar.render();
	});

	function onShowEventModal(info) {

		console.log(info);

		$('#eventModalTitle').text(info.title);

		let startDate = new Date(info.start);
		let endDate = new Date(info.end);

		let optionsDate = { year: 'numeric', month: 'long', weekday: 'long', day:'numeric'};
		let optionsTime = { hour: 'numeric', minute: 'numeric'};

		$('#eventModalStartsAtDate').text(startDate.toLocaleDateString(undefined,optionsDate));
		$('#eventModalStartsAtTime').text(startDate.toLocaleTimeString(undefined, optionsTime));
		$('#eventModalEndsAtTime').text(info.end.toLocaleTimeString(undefined, optionsTime));

		$('#eventModalScheduleDetails').attr("href","lessondetails?id=" + info.id);


		$('#eventModal').modal("show");
	}
</script>

